* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v3.5 on Aug, 07. 2021. JOBID=2839322917
* GENERATE POLYMER STRUCTURE AND COORDINATES
*

DIMENS CHSIZE 5000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

stream mass.str
stream polymer.step0.str
!stream toppar/polbead_info.str

set 1FC = none
set 1LC = none


!
!generation kuhn segment and calculation of radius of kuhn segments
!
calc this_struct = 1
label fragsystem
   calc isphe = 1
   label mk_frag
      set fname = P@{this_struct}F@{isphe}
      set filename = seq_@fname
      open read unit 85 name ./psfcrdreader/@{filename}.str card
      read sequence card unit 85
      if isphe .eq. 1 then
         generate P@{this_struct}F@{isphe} first @{@@{this_struct}FC} last none setup warn
      else
         if isphe .eq. @{nsphe_@@{this_struct}} then
            generate P@{this_struct}F@{isphe} first none last @{@@{this_struct}LC} setup warn
         else
            generate P@{this_struct}F@{isphe} first none last none setup warn
         endif
      endif

      calc imon = 1
      label dofragpatch
         calc jmon = @imon + 1
         define itemp sele segid @fname .and. resid @imon end
         set iname = ?selresn
         if imon .eq. 1 set strresn = @iname
         define jtemp sele segid @fname .and. resid @jmon end
         set jname = ?selresn
         calc jatnum = ?nsel
         if jatnum .eq. 0 goto escpatch
         calc i = 1
         label idxpat2
            if iname .eq. @{rn@@{this_struct}r@@{i}} then set iidx = @i
            if jname .eq. @{rn@@{this_struct}r@@{i}} then set jidx = @i
         incr i by 1
         if i .le. @{totmon_@@{this_struct}} goto idxpat2

         set pname = @{p@@{this_struct}t@@{iidx}n@@{jidx}}
         patch @pname @fname @imon @fname @jmon setup warn

         incr imon by 1
      if imon .lt. @{nm@@{this_struct}r@@{isphe}} then goto dofragpatch
      label escpatch
      calc type = 1
      label strstype
         if strresn .eq. @{rn@@{this_struct}r@@{type}} then set seedidx = @type
         incr type by 1
      if type .le. @{totmon_@@{this_struct}} goto strstype

      set s1 = @{s@@{this_struct}r@@{seedidx}p1}
      set s2 = @{s@@{this_struct}r@@{seedidx}p2}
      set s3 = @{s@@{this_struct}r@@{seedidx}p3}

      ic param
      ic seed @fname 1 @s1 @fname 1 @s2 @fname 1 @s3
      ic build

      !delete atoms sele segid P* end
      open write card unit 10 name psfcrdreader/@{fname}_raw.pdb
      write coor pdb  unit 10 sele segid @fname end
      open write card unit 10 name psfcrdreader/@{fname}_raw.crd
      write coor  unit 10 card sele segid @fname end
      open write card unit 10 name psfcrdreader/@{fname}_raw.psf
      write psf unit 10 card
      !
      !setting restraint based on radius
      !
      !coor stat sele all end
      calc refpos = @rad / 2
      coor stat sele all end
      calc molmass = ?masst
      calc xave = ?xave
      calc yave = ?yave
      calc zave = ?zave

      coor orient
      coor trans xdir -@xave ydir -@yave zdir -@zave sele all end

      calc ang = 180
      label do_gen

         calc xang = 180 - @ang
         calc theta = @xang * ?pi / 180 !rotation angle
         set end = @{nm@@{this_struct}r@@{isphe}}
         calc criteria = @rmin2 - 0.8
         calc refL = @refpos - 0.8

         calc xpos = @refL * cos(@theta)
         calc ypos = @refL * sin(@theta)
         calc zpos = 0.0

         calc imon = 1
         label chiral_check                     !read resname and confirm chirality
            calc i = 1
            label sorttype
               define temp sele segid @fname .and. resid @imon end
               set resname = ?selresn
               if resname .eq. @{rn@@{this_struct}r@@{i}} set type = @i
               incr i by 1
            if i .le. @{totmon_@@{this_struct}} then goto sorttype

            if tt@{this_struct}r@{type} .eq. no goto chiral_skip
            if tt@{this_struct}r@{type} .eq. yes then
               set chitype = c2 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
               coor stat sele segid P@{this_struct}F@{isphe} end
               calc sphresnum = ?nres
               if sphresnum .eq. 1 goto chiral_skip
               define X sele segid P@{this_struct}F@{isphe} .and. resid @imon .and. .bonded. type @chitype end
               set n = ?nsel
               set i = 0 
               label loop
                 incr i by 1
                 coor stat sele X .subset. @I end
                 set name@{I} = ?seltype
               if @I .LT. @N GOTO LOOP
               if imon .eq. @{nm@@{this_struct}r@@{isphe}} then
                  set name5 = @chitype
                  q @fname @imon @name4 @fname @imon @name1 @fname @imon @name2 @fname @imon @name5
                  set chi = ?phi
                  cons dihe force 50 min @chi width 0.0 -
                            @segid @imon @name4  -
                            @segid @imon @name1  -
                            @segid @imon @name2  -
                            @segid @imon @name5
               endif
               set name4 = @chitype
               set segid = @fname
               q @segid @imon @name3 @segid @imon @name1 @segid @imon @name2 @segid @imon @name4
               set chi = ?phi
               cons dihe force 50 min @chi width 0.0 -
                         @segid @imon @name3  -
                         @segid @imon @name1  -
                         @segid @imon @name2  -
                         @segid @imon @name4
            endif
            incr imon by 1
            !incr kmon by 1
         if imon .le. @{nm@@{this_struct}r@@{isphe}} then goto chiral_check

         label chiral_skip
         coor stat sele segid P@{this_struct}F@{isphe} .and. resid 1 end
         set sname = ?selresn
         coor stat sele segid P@{this_struct}F@{isphe} .and. resid @{nm@@{this_struct}r@@{isphe}} end
         set ename = ?selresn
   
         calc k = 1
         label seidx
            if sname .eq. @{rn@@{this_struct}r@@{k}} then set sidx = @k
            if ename .eq. @{rn@@{this_struct}r@@{k}} then set eidx = @k
            incr k by 1
         if k .le. @{totmon_@@{this_struct}} goto seidx
   
         read sequence @sname 2
         generate temp first none last none setup
         patch @{p@@{this_struct}t@@{sidx}n@@{sidx}} temp 1 temp 2 setup warn
   
         coor stat sele ( segid temp .and. resid 2 ) .and. .bonded. ( segid temp .and. resid 1)  show end
         set satom = ?SELTYPE
         set sres = ?selresn
         delete atoms sele segid temp end
   
         read sequence @ename 2
         generate temp first none last none setup
         patch @{p@@{this_struct}t@@{eidx}n@@{eidx}} temp 1 temp 2 setup warn
   
         coor stat sele (segid temp .and. resid 1)  .and. .bonded.  ( segid temp .and. resid 2 )  show end
         set eatom = ?SELTYPE
         set eres = ?selresn
         delete atoms sele segid temp end


         calc i = 1
         label detype
            if rn@{this_struct}r@{i} .eq. @sres  set stype = @i
            if rn@{this_struct}r@{i} .eq. @eres  set etype = @i
            endif
         incr i by 1
         if i .le. @{totmon_@@{this_struct}} goto detype

         set start = 1
         coor stat sele segid P@{this_struct}F@{isphe} .and. resid 1 .and. type @satom end
         calc x1 = ?xave
         calc y1 = ?yave
         calc z1 = ?zave
         calc xref = -@refL
         calc yref = 0
         calc zref = 0

         calc xmove = @xref - @x1
         calc ymove = @yref - @y1
         calc zmove = @zref - @z1
         coor trans xdir @xmove ydir @ymove zdir @zmove sele segid P@{this_struct}F@{isphe} end

         define init sele segid P@{this_struct}F@{isphe} .and. resid 1 .and. type @satom end
         define final sele segid P@{this_struct}F@{isphe} .and. resid @{nm@@{this_struct}r@@{isphe}} .and. type @eatom end

         CONS HMCM FORCE 100.0 WEIG REFX -@refL REFY @yref REFZ @zref -
              SELECT resid 1 .and. type @satom END
         !
         ! NOE distance restraint between the first and the last residues
         !

         set noescale = 32    ! NOE
         set fmax = 100.0
         set kmin = 100.0
         set kmax = 100.0
         set rswi = 3.0
         set rexp = -0.166666666666667
         set sexp = 1
         calc rmin = @refL * 2  - 1.0
         calc rmax = @refL * 2

         NOE
         SCALE @noescale

         ASSI RMIN @rmin RMAX @rmax -
              SELE init end -
              SELE final END -
              REXP @rexp FMAX @fmax RSWI @rswi SEXP @sexp KMIN @kmin KMAX @kmax SUMR
         END

         !setup nonbond option (eps=80)
         Nbonds atom switch cdie vdw vfswitch  -
                ctonnb 10.0 ctofnb 12.0 cutnb 16.0 cutim 16.0 -
                inbfrq -1 imgfrq -1 wmin 1.0 cdie eps 80.0

         mini sd   nstep 200 nprint 50
         mini abnr nstep 200 nprint 50

         NOE
         RESET
         END
         !define target sele all .and. .not. segid P* end
         CONS HMCM FORCE 100.0 WEIG REFX @xpos REFY @ypos REFZ @zpos -
                 SELECT resid @{nm@@{this_struct}r@@{isphe}} .and. type @eatom END
            MMFP
               GEO sphere harm xref 0.0 yref 0.0 zref 0.0 -
                    force 100.0 droff @criteria -
                    select all end
                    !select .not. segid P* end
            END

         mini sd   nstep 200 nprint 50
         mini abnr nstep 200 nprint 50

         set nstep = 1000
         set temp = 300
         scalar fbeta set  10.0 select all end

         DYNAMICS  start       nstep @nstep  timestp  0.001 iprfrq   5000  nprint 100  echeck -1 -
                   iasvel    1 firstt @temp  finalt   @temp tstruc  @temp  -
                   langevin    tbath  @temp  rbuf       0.0 -
                   inbfrq   -1 imgfrq    -1  ihbfrq       0 ilbfrq      0  -
                   iunread  -1  -
                   iunwrite -1  -
                   iuncrd   -1 nsavcrd    0  -
                   iunvelo  -1 nsavvelo   0  -
                   kunit    -1
         CONS CLDH
         CONS HMCM CLEAR

         MMFP
         GEO RESET
         END
         open write card unit 10 name mini.pdb
         write coor pdb  unit 10 

         set segid = P@{this_struct}F@{isphe}
         open write card unit 10 name psfcrdreader/@segid_@ang.pdb
         write coor pdb  unit 10 sele segid @segid end
         open write card unit 10 name psfcrdreader/@segid_@ang.crd
         write coor card  unit 10 sele segid @segid end
         open write card unit 10 name psfcrdreader/@segid_@ang.psf
         write psf unit 10 card

      decr ang by 10
      if ang .ge. 50 goto do_gen

      label ang_skip

      delete atoms select all end
      label frag_skip

      incr isphe by 1
   if isphe .le. @{nsphe_@@{this_struct}} goto mk_frag

   incr this_struct by 1
if this_struct .le. @{num_component} goto fragsystem


stop
