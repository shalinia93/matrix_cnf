* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org)
* POLYMER PACKING
*

DIMENS CHSIZE 5000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

stream polymer.step0.str
set crystalf = toppar/step1_crystal_image2.str

! User's input is the number of chain (ncha) and the monomer (nmon)
!
!
! === Initial setting ===
! - reading each fragment structure's radius
! - selecting an appropriate sphere for packing
!

stream step2.1_size.str

calc A = @sizex * 2.0
calc B = @sizey * 2.0
calc C = @sizez * 2.0
set BXTYPE = @bxtype


calc Nx = int( @A / @rad ) + 1
calc Ny = int( @B / @rad ) + 1
calc Nz = int( @C / @rad ) + 1
calc A = @Nx * @rad
calc B = @Ny * @rad
calc C = @Nz * @rad

calc Ahalf = @A / 2
calc Bhalf = @B / 2
calc Chalf = @C / 2
crystal free
crystal define @BXTYPE @A @B @C 90.0 90.0 90.0

open read unit 10 card name @crystalf
crystal read unit 10 card
close unit 10

! Random number generation
RAND UNIF ISEED 1407596056 SCALE 1.0

autogen off

calc this_struct = 1
calc cutoff = @rad / 2
label insert_seg
   calc nsphe = @{nsphe_@@{this_struct}}
   calc ncha = @{ncha_@@{this_struct}}
   set icha = 1
   set segname = P@{this_struct}
   label insert_cha
      !make big sphere sequence
      set fname = P@{this_struct}C@{icha}
      set resname = P@{this_struct}C
      read sequence card
      1
      @resname 
      generate @fname first none last none setup warn
      label escape
      set isphe = 1
      label insert_sphe
         prnlev 0
         set type = @{P@@{this_struct}F@@{isphe}}
         label initpos
            calc bx1 = int( ( @Nx - 1 ) * ( ?random ) ) + 1
            calc by1 = int( ( @Ny - 1 ) * ( ?random ) ) + 1
            calc bz1 = int( ( @Nz - 1 ) * ( ?random ) ) + 1
         if isphe .eq. 1 then
            define target select segid P@{this_struct}C@{icha} .and. type @{type}@{isphe} end
            calc x1 = ( @bx1 - 1 ) * @rad + @cutoff
            calc y1 = ( @by1 - 1 ) * @rad + @cutoff
            calc z1 = ( @bz1 - 1 ) * @rad + @cutoff
            coor set xdir @x1  ydir @y1  zdir @z1 select target end
            if icha .gt. 1 then
               coor mind cut @cutoff sele target end sele .not. target end images
               if cutoff .gt. ?mind goto initpos 
            endif
         endif

         if isphe .gt. 1 then 
            label do_chain
               calc cnttry = 1
               label get_pos
                  calc cnttry = @cnttry + 1
                  calc dx = 0
                  calc dy = 0
                  calc dz = 0
                  calc randpos =  ?random * 3 
                  if randpos .le. 1 calc dx = 1
                  if randpos .gt. 1 then
                     if randpos .le. 2 then
                        set dy = 1
                     endif
                  endif
                  if randpos .gt. 2 set dz = 1
                  calc dir =  ?random * 2 
                  if dir .le. 1 calc sign = -1
                  if dir .gt. 1 calc sign =  1
                  calc xpos = @x1 + @rad * @dx * @sign
                  calc ypos = @y1 + @rad * @dy * @sign
                  calc zpos = @z1 + @rad * @dz * @sign
                  if xpos .gt.  @A  goto get_pos
                  if xpos .lt.  0   goto get_pos
                  if ypos .gt.  @B  goto get_pos
                  if ypos .lt.  0   goto get_pos
                  if zpos .gt.  @C  goto get_pos
                  if zpos .lt.  0   goto get_pos
                  define target select segid P@{this_struct}C@icha .and. TYPE @{type}@{isphe} end
                  calc cutoff = @rad / 2
                  coor set xdir @xpos  ydir @ypos  zdir @zpos select target end
                  coor mind cut @cutoff sele target end sele .not. target end images
                  if cnttry .gt. 20 goto escape
                  if cutoff .gt. ?mind then
                     goto get_pos
                  else
                     calc x1 = @xpos
                     calc y1 = @ypos
                     calc z1 = @zpos
                  endif
         endif 
      increase isphe by 1
      if isphe .le. @nsphe goto insert_sphe
     incr icha by 1
   if icha .le. @ncha goto insert_cha
   incr this_struct by 1
if this_struct .le. @{num_component} goto insert_seg
prnlev 5

coor stat sele all end

calc xmove = @A / 2
calc ymove = @B / 2
calc zmove = @C / 2
coor trans xdir -@xmove ydir -@ymove zdir -@zmove sele all end

autogen angles dihedrals
bomlev 0
! Sphere packing 
!
calc nstep = 1000
calc boxscale = 1.0
calc shrinkcnt = 0
if A .ge. @B then
    if A .ge. @C then
        calc maxdim = @A
    else
        calc maxdim = @C
    endif
else
    if B .ge. C then
        calc maxdim = @B
    else
        calc maxdim = @C
    endif
endif

calc bxshlen = @maxdim * 0.1
if bxshlen .ge. @{rmin2} then
    calc shlen = @{rmin2} 
else
    calc shlen = @bxshlen
endif
 
label do_packing

   if boxscale .le. 0.5 then
       calc Ainit = @sizex 
       calc Binit = @sizey 
       calc Cinit = @sizez
       calc boxscale = 0.5 
   else
       calc Ainit = @A * @boxscale
       calc Binit = @B * @boxscale
       calc Cinit = @C * @boxscale
   endif 
   crystal free
   crystal define @bxtype @Ainit @Binit @Cinit 90.0 90.0 90.0 
   open read unit 10 card name @crystalf
   crystal read unit 10 card
   close unit 10

   IMAGE BYSEGID XCEN 0.0 YCEN 0.0 ZCEN 0.0

   calc ctonnb = @rad * 2 
   calc ctofnb = @ctonnb
   calc cutnb  = @ctofnb + 2           !present version
   calc cutim  = @cutnb
   nbonds nbxmod 2 -
          atom switch cdie vdw vswitch  -
          ctonnb @ctonnb ctofnb @ctofnb cutnb @cutnb cutim @cutim -
          inbfrq -1 imgfrq -1 wmin 1.0 cdie eps 80.0
   
   mini sd   nstep 100 nprint 100
   mini abnr nstep 100 nprint 100
   
   set temp = 600
   scalar fbeta set  10.0 select all end
   
   DYNAMICS  start       nstep @nstep  timestp  0.010 iprfrq   300  nprint 300  echeck -1 -
             iasvel    1 firstt @temp  finalt   @temp tstruc  @temp  -
             langevin    tbath  @temp  rbuf       0.0 -
             inbfrq   -1 imgfrq    -1  ihbfrq       0 ilbfrq      0  -
             iunread  -1  -
             iunwrite -1  -
             iuncrd   -1 nsavcrd    0  -
             iunvelo  -1 nsavvelo   0  -
             kunit    -1 
    if boxscale .eq. 0.5 goto escshrink
    incr shrinkcnt by 1
    calc boxscale = ( @A - @shlen * @shrinkcnt ) / @A
if boxscale .gt. 0.4 goto do_packing

label escshrink

!segment rename 
crystal free
calc this_struct = 1
label str_rename
    set segname = P@{this_struct}
    calc icha = 1
    label cha_rename
        if icha .eq. 1 then
            rename segid @segname sele segid P@{this_struct}C@{icha} end
        else
            join @segname P@{this_struct}C@{icha} renumber
        endif
   increase icha by 1
   if icha .le. @{ncha_@@{this_struct}} goto cha_rename
increase this_struct by 1
if this_struct .le. @{num_component} goto str_rename

coor stat sele all end
calc xcen = 0
calc ycen = 0
calc zcen = 0

crystal define @bxtype  @{sizex}  @{sizey}  @{sizez}  90.0 90.0 90.0
open unit 10 read card name @crystalf
crystal read unit 10 card
! image byatoms xcen @xcen ycen @ycen zcen @zcen
!energy

image byres xcen @xcen ycen @ycen zcen @zcen sele segid p* end
update imall

define p1 sele segid P* end
define p11 sele p1 .and. prop x .gt. @xcen .and. prop y .gt. @ycen .and. prop z .gt. @zcen end ! sec 1
calc n1 = ?nsel

define p12 sele p1 .and. prop x .gt. @xcen .and. prop y .gt. @ycen .and. prop z .le. @zcen end ! sec 2
calc n2 = ?nsel

define p13 sele p1 .and. prop x .gt. @xcen .and. prop y .le. @ycen .and. prop z .gt. @zcen end ! sec 3
calc n3 = ?nsel

define p14 sele p1 .and. prop x .gt. @xcen .and. prop y .le. @ycen .and. prop z .le. @zcen end ! sec 4
calc n4 = ?nsel

define p15 sele p1 .and. prop x .le. @xcen .and. prop y .gt. @ycen .and. prop z .gt. @zcen end ! sec 5
calc n5 = ?nsel

define p16 sele p1 .and. prop x .le. @xcen .and. prop y .gt. @ycen .and. prop z .le. @zcen end ! sec 6
calc n6 = ?nsel

define p17 sele p1 .and. prop x .le. @xcen .and. prop y .le. @ycen .and. prop z .gt. @zcen end ! sec 7
calc n7 = ?nsel

define p18 sele p1 .and. prop x .le. @xcen .and. prop y .le. @ycen .and. prop z .le. @zcen end ! sec 8
calc n8 = ?nsel

calc ntot = 8
calc innn = 1
set imax = 0
label findmax
    calc temp = @{n@@{innn}}
    if imax .le. @temp then
    	set imax = @{n@@{innn}}
	set xxx = p1@{innn}
    endif
    incr innn by 1
if innn .le. @ntot goto findmax

coor stat sele @xxx end
calc ntemp = ?nsel

coor stat sele @xxx end
calc x1 = ?xave - @xcen
calc y1 = ?yave - @ycen
calc z1 = ?zave - @zcen

coor trans xdir -@{x1} ydir -@{y1} zdir -@{z1} sele all end

energy

coor stat sele segid p* end
calc x1 = ?xave -@xcen
calc y1 = ?yave -@ycen
calc z1 = ?zave -@zcen

coor trans xdir -@{x1} ydir -@{y1} zdir -@{z1} sele all end

! update imall
energy



open write card unit 10 name step2.1_gen_kuhn_lattice_model.pdb
write coor pdb  unit 10
open write card unit 10 name step2.1_gen_kuhn_lattice_model.psf
write psf  card unit 10
open write card unit 10 name step2.1_gen_kuhn_lattice_model.crd
write coor  unit 10 card
open write card unit 90 name step2.1_gen_kuhn_lattice_model.str
write title unit 90
* set A = @sizex
* set B = @sizey
* set C = @sizez
* set alpha = 90.0
* set beta  = 90.0
* set gamma = 90.0
* set BXTYPE = @bxtype
* set Nx = @Nx
* set Ny = @Ny
* set Nz = @Nz
*

stop

